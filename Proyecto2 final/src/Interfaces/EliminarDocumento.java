/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;


import Estructuras.ListDocumento;
import Estructuras.NodeDocumento;
import Estructuras.NodeUsuario;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import proyecto2.App;

/**
 * @Description: interfaz para eliminar documentos en la simulaciǿn
 * @author Catalina Matheus
 * @version: 12/11/2023
 */
public class EliminarDocumento extends javax.swing.JFrame {

    App app = App.getInstance();
    String usuario;
    String documento;
    

    /**
     * Creates new form CrearDoc
     */
    public EliminarDocumento() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        this.limpiarList();
        this.desplegarUsuarios();
        this.limpiarListD();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jToggleButton5 = new javax.swing.JToggleButton();
        jToggleButton4 = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListDocumentos = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListUsuariosE = new javax.swing.JList<>();
        Imagen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jToggleButton1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jToggleButton1.setText("ATRÁS");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 540, 110, -1));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel4.setText("DESEA ELIMINAR");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 260, 160, -1));

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel5.setText("SELECCIONE EL USUARIO QUE DESEA");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 350, -1));

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel6.setText("SELECCIONE EL DOCUMENTO QUE ");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 240, 320, -1));

        jToggleButton5.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jToggleButton5.setText("Eiminar");
        jToggleButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 440, 120, 20));

        jToggleButton4.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jToggleButton4.setText("Seleccionar");
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 440, 120, 20));

        jScrollPane2.setViewportView(ListDocumentos);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 290, 330, -1));

        jScrollPane1.setViewportView(ListUsuariosE);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 290, 330, -1));

        Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/EliminarDoc.jpg"))); // NOI18N
        getContentPane().add(Imagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        this.setVisible(false);
        CrearEliminarDoc i = new CrearEliminarDoc();
        i.setVisible(true);
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed
        usuario = ListUsuariosE.getSelectedValue();

        if (usuario == null) {
            JOptionPane.showMessageDialog(null, "Tiene que seleccionar un usuario para continuar");
        } else {

            ListDocumento Listica = app.getLista().find(usuario).getDocumentos();
            this.desplegarDocumentos(Listica);

        }

    }//GEN-LAST:event_jToggleButton4ActionPerformed

    private void jToggleButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton5ActionPerformed

        documento = ListDocumentos.getSelectedValue();
        if (usuario != null) {
            if (documento == null) {
                JOptionPane.showMessageDialog(null, "Tiene que seleccionar un documento para eliminar");
            } else {
                documento = documento.replace("  (En Cola)", "");
                ListDocumento listac = app.getLista().find(usuario).getDocumentos();
                NodeDocumento temp = listac.find(documento);

                if (!temp.isEnCola()) {
                    listac.findEliminate(documento);
                    this.desplegarDocumentos(listac);

                } else {
                    JOptionPane.showMessageDialog(null, "El documento seleccionado esta en cola por lo cual no se puede eliminar");
                }
            }

        }else{
            JOptionPane.showMessageDialog(null, "Tiene que seleccionar un usuario para continuar");
        }
    }//GEN-LAST:event_jToggleButton5ActionPerformed

    /**
     * @Descripcion: funcion que despliega la informacion en el JList
     * @return
     * @author: Catalina Matheus, Reinaldo Reyes
     * @version: 12/11/2023
     */
    public void desplegarDocumentos(ListDocumento lista) {
        DefaultListModel modelo = new DefaultListModel();
        NodeDocumento aux = lista.getpFirst();
        while (aux != null) {
            if (!aux.isEnCola()) {
                modelo.addElement(aux.getNombre());
                aux = aux.getpNext();
            } else {
                String n = aux.getNombre() + "  (En Cola)";
                modelo.addElement(n);
                aux = aux.getpNext();

            }

        }
        this.ListDocumentos.setModel(modelo);
    }

    /**
     * @Descripcion: funcion que limpia los JList antes de desplegar la
     * información
     * @return
     * @author: Catalina Matheus
     * @version: 17/10/2023
     */
    public DefaultListModel limpiarListD() {
        DefaultListModel modelo = new DefaultListModel();
        ListDocumentos.setModel(modelo);
        return modelo;
    }

    /**
     * @Descripcion: funcion que limpia los JList antes de desplegar la
     * información
     * @return
     * @author: Catalina Matheus
     * @version: 17/10/2023
     */
    public DefaultListModel limpiarList() {
        DefaultListModel modelo = new DefaultListModel();
        ListUsuariosE.setModel(modelo);
        return modelo;
    }

    /**
     * @Descripcion: funcion que despliega la informacion en el JList
     * @return
     * @author: Catalina Matheus
     * @version: 12/11/2023
     */
    public void desplegarUsuarios() {
        DefaultListModel modelo = (DefaultListModel) ListUsuariosE.getModel();
        NodeUsuario aux = app.getLista().getpFirst();
        while (aux != null) {
            modelo.addElement(aux.getNombreUsuario());
            aux = aux.getpNext();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EliminarDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EliminarDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EliminarDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EliminarDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EliminarDocumento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Imagen;
    private javax.swing.JList<String> ListDocumentos;
    private javax.swing.JList<String> ListUsuariosE;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    // End of variables declaration//GEN-END:variables
}
